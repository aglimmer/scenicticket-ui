[{"E:\\VSCode\\scenicticket-ui\\src\\index.tsx":"1","E:\\VSCode\\scenicticket-ui\\src\\component\\scenic\\addition.tsx":"2","E:\\VSCode\\scenicticket-ui\\src\\component\\login\\index.tsx":"3","E:\\VSCode\\scenicticket-ui\\src\\App.tsx":"4","E:\\VSCode\\scenicticket-ui\\src\\component\\index.tsx":"5","E:\\VSCode\\scenicticket-ui\\src\\component\\top\\index.tsx":"6","E:\\VSCode\\scenicticket-ui\\src\\component\\home\\index.tsx":"7","E:\\VSCode\\scenicticket-ui\\src\\component\\user\\index.tsx":"8","E:\\VSCode\\scenicticket-ui\\src\\component\\util\\axios.ts":"9","E:\\VSCode\\scenicticket-ui\\src\\reportWebVitals.ts":"10","E:\\VSCode\\scenicticket-ui\\src\\component\\scenic\\detail.tsx":"11","E:\\VSCode\\scenicticket-ui\\src\\component\\order\\index.tsx":"12","E:\\VSCode\\scenicticket-ui\\src\\component\\order\\refund.tsx":"13","E:\\VSCode\\scenicticket-ui\\src\\component\\scenic\\index.tsx":"14","E:\\VSCode\\scenicticket-ui\\src\\component\\find\\index.tsx":"15","E:\\VSCode\\scenicticket-ui\\src\\component\\find\\list.tsx":"16"},{"size":500,"mtime":1618039305223,"results":"17","hashOfConfig":"18"},{"size":11414,"mtime":1618133306046,"results":"19","hashOfConfig":"18"},{"size":3681,"mtime":1618133376746,"results":"20","hashOfConfig":"18"},{"size":203,"mtime":1618039398397,"results":"21","hashOfConfig":"18"},{"size":888,"mtime":1618147803970,"results":"22","hashOfConfig":"18"},{"size":223,"mtime":1618069618890,"results":"23","hashOfConfig":"18"},{"size":2033,"mtime":1618147452943,"results":"24","hashOfConfig":"18"},{"size":4865,"mtime":1618077399236,"results":"25","hashOfConfig":"18"},{"size":1295,"mtime":1618134710031,"results":"26","hashOfConfig":"18"},{"size":425,"mtime":1607155971298,"results":"27","hashOfConfig":"18"},{"size":12811,"mtime":1618133924881,"results":"28","hashOfConfig":"18"},{"size":12469,"mtime":1618134394081,"results":"29","hashOfConfig":"18"},{"size":4877,"mtime":1618134038069,"results":"30","hashOfConfig":"18"},{"size":5101,"mtime":1618133333195,"results":"31","hashOfConfig":"18"},{"size":1369,"mtime":1618145870460,"results":"32","hashOfConfig":"18"},{"size":1535,"mtime":1618145732184,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w2bm3g",{"filePath":"36","messages":"37","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\VSCode\\scenicticket-ui\\src\\index.tsx",[],"E:\\VSCode\\scenicticket-ui\\src\\component\\scenic\\addition.tsx",["69","70","71","72","73","74","75","76"],"E:\\VSCode\\scenicticket-ui\\src\\component\\login\\index.tsx",["77","78","79","80","81","82"],"E:\\VSCode\\scenicticket-ui\\src\\App.tsx",[],"E:\\VSCode\\scenicticket-ui\\src\\component\\index.tsx",["83"],"E:\\VSCode\\scenicticket-ui\\src\\component\\top\\index.tsx",[],"E:\\VSCode\\scenicticket-ui\\src\\component\\home\\index.tsx",["84","85","86","87","88","89","90","91"],"E:\\VSCode\\scenicticket-ui\\src\\component\\user\\index.tsx",["92","93","94"],"import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport axios from '../util/axios'\r\nimport '../css/base.css'\r\nimport {UserContext} from '../login'\r\nimport { NavLink } from 'react-router-dom';\r\ninterface UserProp {\r\n    id: number;\r\n    realname: string;\r\n    sex: string;\r\n    profileImg: string;\r\n    nickname: string;\r\n    phone: string;\r\n    mailbox: string;\r\n    idNumber: string;\r\n    registerTime: string;\r\n    deleted: boolean;\r\n}\r\n// const BASE_URL = \"http://localhost:8080/scenicticket/\"\r\n\r\n\r\nconst User: React.FC = (props: any) => {\r\n    console.log(\"user..................\")\r\n    let info: UserProp = { id: 0, realname: '', sex: '', profileImg: '/images/profile.jpg', nickname: '', phone: '', mailbox: '', idNumber: '', deleted: false, registerTime: '' };\r\n    const classes = {\r\n        isRead: 'input_read',\r\n        isEdit: 'input_edit'\r\n    }\r\n    const CacheName = \"user\";\r\n    let [userDetail, setuserDetail] = useState(info);\r\n    /*保存用户信息*/\r\n    const context = useContext(UserContext);\r\n    const {userId} = context.data;\r\n    const saveInfo = () => {\r\n        setIsRead(true);\r\n        setClsname(classes.isRead);\r\n        console.log(\"保存信息：\" + JSON.stringify(userDetail));\r\n        const url = `/conductors/${userId}`;\r\n        axios.put(url, userDetail).then((response) => {\r\n            console.log(\"response=\",response)\r\n            session.setItem(CacheName, JSON.stringify(userDetail))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n    const editInfo = () => {\r\n        setClsname(classes.isEdit);\r\n        setIsRead(false);\r\n    }\r\n    let session = window.sessionStorage;\r\n    useEffect(() => {\r\n       \r\n        let buff = session.getItem(CacheName);\r\n        console.log(\"cacheName=\",buff)\r\n        // if (buff === undefined || buff === null) {\r\n          const  userId = 1;\r\n            axios.get(`/conductors/${userId}`).then((res:any) => {\r\n                console.log(\"conductors=\",res)\r\n                if(res===\"\"){\r\n                    console.log(\"用户不存在\")\r\n                }else{\r\n                    setuserDetail(res);\r\n                    session.setItem(CacheName, JSON.stringify(res));\r\n                }\r\n            }).catch((error) => {\r\n                console.log(\"请求失败！\");\r\n            });\r\n        // } \r\n        // else {\r\n        //     setuserDetail(JSON.parse(buff))\r\n        // }\r\n    }, []);\r\n\r\n\r\n    const [isRead, setIsRead] = useState(true);\r\n    let [clsname, setClsname] = useState(classes.isRead);\r\n    return (\r\n        <div>\r\n            <div style={{ background: 'blue', height: '50px' }}>\r\n                <div><img className=\"img_profile\" alt='' src={userDetail.profileImg}></img></div>\r\n            </div>\r\n            <div>\r\n                <ul>\r\n                    <li>\r\n                        <label>姓名</label>\r\n                        <input className={clsname} defaultValue={userDetail.realname} readOnly={isRead} ref={(e) => userDetail.realname = (e == null ? userDetail.realname : e.value)}></input>\r\n                    </li>\r\n                    <li>\r\n                        <label>性别</label>\r\n                        <input className={clsname} readOnly={isRead} defaultValue={userDetail.sex} ref={(e) => userDetail.sex = (e == null ? userDetail.sex : e.value)}></input>\r\n                    </li>\r\n                    <li>\r\n                        <label>昵称</label>\r\n                        <input className={clsname} readOnly={isRead} defaultValue={userDetail.nickname} ref={(e) => userDetail.nickname = (e == null ? userDetail.nickname : e.value)}></input>\r\n                    </li>\r\n                    <li>\r\n                        <label>手机号</label>\r\n                        <input className={clsname} readOnly={isRead} defaultValue={userDetail.phone} ref={(e) => userDetail.phone = (e == null ? userDetail.phone : e.value)}></input>\r\n                    </li>\r\n                    <li>\r\n                        <label>邮箱</label>\r\n                        <input className={clsname} readOnly={isRead} defaultValue={userDetail.mailbox} ref={(e) => userDetail.mailbox = (e == null ? userDetail.mailbox : e.value)}></input>\r\n                    </li>\r\n                    <li>\r\n                        <label>身份证号</label>\r\n                        <input className={clsname} readOnly={isRead} defaultValue={userDetail.idNumber} ref={(e) => userDetail.idNumber = (e == null ? userDetail.idNumber : e.value)}></input>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div>\r\n                <button className=\"action_btn\" onClick={editInfo}>修改资料</button>\r\n                <button className=\"action_btn\" onClick={saveInfo}>完成保存</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default User;","E:\\VSCode\\scenicticket-ui\\src\\component\\util\\axios.ts",[],"E:\\VSCode\\scenicticket-ui\\src\\reportWebVitals.ts",[],"E:\\VSCode\\scenicticket-ui\\src\\component\\scenic\\detail.tsx",["95","96","97","98","99","100","101","102","103","104"],"\r\nimport React, { InputHTMLAttributes, useCallback, useContext, useEffect, useRef, useState } from 'react'\r\nimport { Link, NavLink, Redirect, Route, Switch, useHistory } from 'react-router-dom';\r\nimport Scenic, { ScenicProp, ScenicStyleContext, UStyle } from '.';\r\nimport axios from '../util/axios'\r\nimport './scenic.css'\r\nimport Popbox from '../popbox';\r\n\r\n\r\nexport interface TicketTypeProps {\r\n    id: string;\r\n    scenicId: string;\r\n    ticketType: string;\r\n    discountRate: number;\r\n}\r\n//售票信息\r\n//enterTime：景点开放时间\r\n//leaveTime：景点关闭时间\r\n//createDateTime：不用发送，后台自动创建\r\n//varifyId: 游客登记的ID\r\n//dealNote:默认为购票\r\n\r\nexport interface TicketRecordProps {\r\n    id: string;\r\n    scenicId: string;\r\n    conductorId: string;\r\n    varifyId: string;\r\n    enterTime: string;\r\n    leaveTime: string;\r\n    createDateTime?: string;\r\n    orderDate: string;\r\n    ticketType: string;\r\n    payMoney: number;\r\n    ticketSize: number;\r\n    dealNote?: \"购票\" | \"退票\";\r\n    deleted?: true | false;\r\n}\r\n//游客登记信息\r\n//id:后端生成，不用向后端传递\r\nexport interface CustomerVarifyProps {\r\n    id?: string;\r\n    realName: string;\r\n    idNumber?: string;\r\n    phone?: string;\r\n}\r\n/*\r\n{id: 3, scenicName: \"厦门鼓浪屿上船门票\", scenicImg: \"http://localhost:8080/scenicticket/img/scenic/3.png\", scenicDiscription: \"鼓浪屿是个宁静美丽的小岛，这里有着各种风格迥异、中西合壁的建筑，汇集了各种特色的食铺和商铺，充满了文…庄花园（含钢琴博物馆）、明代风格建筑的皓月园（内有郑成功石像）、风琴博物馆和国际刻字艺术馆等。\r\n↵\", openTime: \"08:00:00\", …}\r\n*/\r\n\r\nconst getDaysWithNow = (datestr: string) => {\r\n    //日期转换数字\r\n    //const [year,month,day] = new Date().toLocaleDateString().split('-').map((o)=>parseInt(o));\r\n    const now = new Date().getTime();\r\n    const dates = new Date(datestr).getTime();\r\n    let days = Math.ceil((dates - now) / 1000 / 60 / 60 / 24);\r\n    return days;\r\n}\r\n//按景点ID查询门票，返回列表\r\nconst queryTicketById = (id: string, updateTicketList: Function) => {\r\n    let vs: TicketTypeProps[] = [];\r\n    const baseUrl = \"/scenics/scenicId/\" + id;\r\n    axios.get(baseUrl).then((data:any) => {\r\n        for (let tmp of data) {\r\n            console.log(tmp);\r\n            vs.push(tmp)\r\n        }\r\n        updateTicketList(vs);\r\n    });\r\n}\r\n//添加购票记录，返回处理信息\r\nconst saveTicketRecord = (tickets: TicketRecordProps, updateResult: Function) => {\r\n    const orderUrl = \"/conductorTicketRecords/record\";\r\n    axios.post(orderUrl, tickets).then((res) => {\r\n        updateResult(\"购票处理成功:\",res)\r\n    }).catch((e) => {\r\n        updateResult(\"请求失败\")\r\n    })\r\n}\r\nconst dateStringFormat = (datestr: string): string => {\r\n    var now = new Date(datestr);\r\n    //格式化日，如果小于9，前面补0\r\n    var day = (\"0\" + now.getDate()).slice(-2);\r\n    //格式化月，如果小于9，前面补0\r\n    var month = (\"0\" + (now.getMonth() + 1)).slice(-2);\r\n    //拼装完整日期格式\r\n    var today = now.getFullYear() + \"-\" + (month) + \"-\" + (day);\r\n    return today;\r\n}\r\n\r\n\r\nconst Detail: React.FC = (props: any) => {\r\n    console.log(\"detail...................\")\r\n    console.log(props.location.state)\r\n    let scenic = props.location.state as ScenicProp;\r\n    let { setVisible } = useContext(ScenicStyleContext);\r\n\r\n    // const info:TicketTypeProps = {id:1,scenicId:1,ticketType:\"成人票\",discountRate:1}\r\n\r\n    // const initParam: TicketTypeProps = { id: 1, scenicId: 1, ticketType: '', discountRate: 0 }\r\n\r\n    const [view, changeView] = useState(false)\r\n    const viewRef = useRef(view);\r\n    //更新当前组件\r\n    const updateView = useCallback(()=>{\r\n        viewRef.current = !viewRef.current;\r\n        changeView(viewRef.current);\r\n    },[viewRef])\r\n\r\n    //加载组件后，查询门票\r\n    const ticketListRef = useRef<TicketTypeProps[]>([])\r\n    const validRef = useRef('');\r\n    const responseRef = useRef('');\r\n    //首次加载组件时执行\r\n    useEffect(() => {\r\n        //根据景点ID获取票额\r\n        queryTicketById(scenic.id, (res: TicketTypeProps[]) => {\r\n            //返回数据\r\n            ticketListRef.current = res;\r\n            //子组件开始挂载，父组件隐藏\r\n            setVisible(false)\r\n            //更新当前组件\r\n            updateView()\r\n        });\r\n        return () => {\r\n            //恢复父组件状态\r\n            setVisible(true)\r\n            console.log(\"detail卸载。。。\")\r\n        }\r\n    }, [])\r\n\r\n\r\n    //保存身份信息\r\n    const { current: obj } = useRef<CustomerVarifyProps>({ realName: 'xxx', idNumber: '530382199806122453', phone: '15329291231' })\r\n\r\n    //保存订单信息,解构出对象并重名为ticketOrder\r\n    const { current: ticketOrder } = useRef<TicketRecordProps>({\r\n        id:'',\r\n        scenicId: '',\r\n        conductorId: '',\r\n        varifyId: '',\r\n        enterTime: scenic.openTime,\r\n        leaveTime: scenic.closeTime,\r\n        orderDate: dateStringFormat(new Date().toLocaleDateString()),\r\n        ticketType: '',\r\n        payMoney: 0,\r\n        ticketSize: 0,\r\n        dealNote: \"购票\"\r\n    })\r\n\r\n    //计算票价\r\n    const calPrice = (discount: number) => {\r\n        return Math.round(scenic.fee * discount * 100) / 100;\r\n    }\r\n\r\n\r\n    //检查输入信息\r\n    const checkInput = () => {\r\n        console.log(ticketOrder)\r\n        console.log(obj)\r\n\r\n        //获取选中的门票类型\r\n        // let pay = ticketListRef.current.find((o) => o.ticketType === ticketOrder.ticketType)?.discountRate\r\n        console.log(ticketOrder)\r\n        console.log(obj)\r\n\r\n        if (ticketOrder.ticketType === \"\") {\r\n            return \"请选择门票类型\"\r\n        }\r\n        const days = getDaysWithNow(ticketOrder.orderDate);\r\n        if (days < 0 || days > 30) {\r\n            return \"日期不能小于当前且不能超出未来30天\"\r\n        }\r\n\r\n        console.log(\"size=\", ticketOrder.ticketSize)\r\n        if (ticketOrder.ticketType === \"团体票\" && ticketOrder.ticketSize < 10) {\r\n            return \"团体票购买票数必须大于等于10\"\r\n        }\r\n\r\n        if (ticketOrder.ticketSize < 1 || ticketOrder.ticketSize > 100) {\r\n            return \"门票数量必须大于等于1且不能超过100\";\r\n        }\r\n\r\n        //验证用户身份信息\r\n        if (obj.idNumber === '' || obj.realName === '') {\r\n            return \"请正确输入用户信息\";\r\n        }\r\n        console.log(\"pass===========================================\")\r\n        return \"\";\r\n    }\r\n    //完成订单：1.添加游客身份信息 2.添加订单\r\n    const finishOrder = () => {\r\n      \r\n        const msg = checkInput();\r\n        if (msg !== \"\") {\r\n            validRef.current=msg;\r\n            updateView()\r\n            return;\r\n        }\r\n        let conductor = window.sessionStorage.getItem(\"conductor\");\r\n        let conductorId = conductor === null ? 1 : JSON.parse(conductor);\r\n        ticketOrder.conductorId = conductorId;\r\n        console.log(\"obj=======\", obj)\r\n        //购票人身份登记信息保存到数据库\r\n        axios.post(\"customerVarifys/add\", obj).then((data:any) => {\r\n            console.log(\"res=\", data)\r\n            //然后，购票订单页也要保存到数据库\r\n            ticketOrder.varifyId = data;\r\n            saveTicketRecord(ticketOrder, (msg: string) => {\r\n                console.log(msg)\r\n            });\r\n            responseRef.current= \"购票处理成功\"\r\n            console.log(responseRef.current)\r\n            updateView()\r\n            // setTimeout(()=>{\r\n            //     console.log(\"正在跳转\")\r\n            //     window.location.href=\"/home/scenic\"\r\n            // },3000)\r\n        }).catch(() => {\r\n            responseRef.current= \"购票处理失败\"\r\n            updateView()\r\n            console.log(responseRef.current)\r\n        })\r\n    }\r\n\r\n\r\n    const changeObj = (e: any) => {\r\n        console.log(\"changeObj....\")\r\n        const { name, value } = e.target\r\n        obj[name] = value;\r\n        console.log(name, value)\r\n        validRef.current=checkInput()\r\n        updateView()\r\n    }\r\n    const changeTicketOrder = (e: any) => {\r\n        console.log(\"changeObj....\")\r\n        const { name, value } = e.target\r\n        ticketOrder[name] = value;\r\n        console.log(name, value)\r\n        if (name === \"ticketType\" || name === \"ticketSize\") {\r\n            let pay = ticketListRef.current.find((o) => o.ticketType === ticketOrder.ticketType)?.discountRate\r\n            //首次加载，为undefined\r\n            if (pay !== undefined) {\r\n                ticketOrder.payMoney = calPrice(pay as number) * ticketOrder.ticketSize\r\n                console.log(\"当前费用：\", ticketOrder.payMoney)\r\n            }\r\n        }\r\n        validRef.current=checkInput()\r\n        updateView()\r\n    }\r\n    const changeOrderDate = (e: any) => {\r\n        console.log(\"changeOrderDate....\")\r\n        ticketOrder.orderDate = dateStringFormat(new Date(e.target.value).toLocaleDateString())\r\n        console.log(ticketOrder.orderDate)\r\n        validRef.current=checkInput();\r\n        updateView()\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                {responseRef.current!==\"\" && <Popbox msg={responseRef.current} closeCallback={()=>{responseRef.current=\"\";updateView()}}/>}\r\n                <h3>{scenic.scenicName}</h3>\r\n                <h4>开放时间</h4>\r\n                <p>{scenic.openTime}~{scenic.closeTime}</p>\r\n                <h4>门票类型</h4>\r\n                <div>\r\n                    <p>\r\n                    {ticketListRef.current.map((name, index) => (\r\n                        <label key={index}><b>{name.ticketType}</b>&nbsp;{calPrice(name.discountRate as number)}元\r\n                            <input type=\"radio\" name=\"ticketType\" value={name.ticketType} onChange={changeTicketOrder} />\r\n                        </label>\r\n                    ))}\r\n                    </p>\r\n                </div>\r\n                <h4>购票人信息</h4>\r\n                <div>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td><b>游客姓名 </b></td>\r\n                                <td>  <input type=\"text\" name=\"realName\" onChange={changeObj} defaultValue={obj.realName}></input></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><b>身份证号</b></td>\r\n                                <td>  <input type=\"password\" name=\"idNumber\" defaultValue={obj.idNumber} onChange={changeObj}></input></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><b>手机号</b></td>\r\n                                <td>  <input name=\"phone\" type=\"number\" defaultValue={obj.phone} onChange={changeObj}></input></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><b>门票数量</b></td>\r\n                                <td>  <input name=\"ticketSize\" type=\"number\" onChange={changeTicketOrder} defaultValue={ticketOrder.ticketSize}></input></td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td><b>使用日期</b></td>\r\n                                <td><input type=\"date\" onChange={changeOrderDate} defaultValue={ticketOrder.orderDate} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><b>门票支付费用</b></td>\r\n                                <td><b>{ticketOrder.payMoney}</b></td>\r\n                            </tr>\r\n                            <tr><td colSpan={2}><i>提示：团体票10人起，总费用 = 团体票价格 x 总人数</i></td></tr>\r\n                            <tr>\r\n                                <td colSpan={2}><button className=\"action_btn\" onClick={finishOrder}>确认订票</button></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colSpan={2}>\r\n                                    {validRef.current !== '' && <div style={{ color: 'red' }}>{validRef.current}</div>}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <h4>景点介绍</h4>\r\n                <div>\r\n                    <p>{scenic.scenicDiscription}</p>\r\n                    <img src={scenic.scenicImg} alt=\"无法显示\"></img>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Detail","E:\\VSCode\\scenicticket-ui\\src\\component\\order\\index.tsx",["105","106","107","108","109","110"],"E:\\VSCode\\scenicticket-ui\\src\\component\\order\\refund.tsx",["111"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { RefundTicketProps } from '.';\r\nimport axios from \"../util/axios\"\r\nimport \"./index.css\"\r\nimport { CustomerVarifyProps, TicketRecordProps } from '../scenic/detail';\r\n/*\r\nconst exemple=[\r\n        {\r\n          \"conductorRefund\": {\r\n            \"id\": \"1\",\r\n            \"conductorRecordId\": \"46\",\r\n            \"refundDate\": \"2021-01-03 20:33:39\",\r\n            \"refundMoney\": 35,\r\n            \"refundSize\": 1,\r\n            \"conductorBillId\": \"0\",\r\n            \"deleted\": false\r\n          },\r\n          \"customerVarify\": {\r\n            \"id\": \"20210103004107286\",\r\n            \"realName\": \"张三\",\r\n            \"idNumber\": \"530382199806122453\",\r\n            \"phone\": \"15329291231\"\r\n          },\r\n          \"conductorTicketRecord\": {\r\n            \"id\": \"46\",\r\n            \"scenicId\": \"0\",\r\n            \"conductorId\": \"1\",\r\n            \"varifyId\": \"20210103004107286\",\r\n            \"enterTime\": \"00:00:00\",\r\n            \"leaveTime\": \"23:59:59\",\r\n            \"orderDate\": 1609603200000,\r\n            \"createDateTime\": \"2021-01-03 20:33:33\",\r\n            \"ticketType\": \"标准票\",\r\n            \"payMoney\": 35,\r\n            \"ticketSize\": 1,\r\n            \"dealNote\": \"退票\",\r\n            \"deleted\": false\r\n          }\r\n        }\r\n      ]\r\n      */\r\n//后端返回多个对象联合的json列表，必须按照返回值中给定关键字来定义接口     \r\ninterface RefundTicketView{\r\n    conductorRefund:RefundTicketProps,\r\n    conductorTicketRecord:TicketRecordProps,\r\n    customerVarify:CustomerVarifyProps,\r\n}     \r\nconst Refund: React.FC = (props) => {\r\n    console.log(\"Refund...................\")\r\n    const [view, changeView] = useState(false);\r\n \r\n\r\n    let refundTicketListRef = useRef<RefundTicketView[]>([])\r\n    const sumItemRef = useRef({sumTicket:0,sumMoney:0})\r\n    useEffect(() => {\r\n        axios.get(\"/conductorRefunds/refundTicketView\").then((data:any) => {\r\n            refundTicketListRef.current = data as RefundTicketView[];\r\n            console.log(data)\r\n            console.log(\"=================\")\r\n            console.log(refundTicketListRef.current)\r\n            console.log(\"=================\")\r\n            // refundTicketListRef.current.forEach((ticket,index)=>{\r\n            //     sumItemRef.current.sumMoney += ticket.refundMoney;\r\n            //     sumItemRef.current.sumTicket += ticket.refundSize;\r\n            // })\r\n            refundTicketListRef.current.forEach((obj,index)=>{\r\n                let {conductorRefund} = obj;\r\n                // console.log(conductorRefund)\r\n                // console.log(conductorTicketRecord)\r\n                // console.log(customerVarify)\r\n                // console.log(obj)\r\n                sumItemRef.current.sumMoney += conductorRefund.refundMoney\r\n                sumItemRef.current.sumTicket += conductorRefund.refundSize\r\n            })\r\n            changeView(!view)\r\n        })\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <h1 className=\"title\">{refundTicketListRef.current.length>0?\r\n            <table className=\"line_table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>订单数量：{refundTicketListRef.current.length}</th>\r\n                        <th>退票数量：{sumItemRef.current.sumTicket}</th>\r\n                        <th>退款总额：{sumItemRef.current.sumMoney}</th>\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n            :\r\n            \"没有找到相应记录！\"}\r\n            </h1>\r\n            <table className=\"list\">\r\n                <thead>\r\n                   {refundTicketListRef.current.length>0 && \r\n                   <tr>\r\n                        <th>账单ID</th>\r\n                        <th>游客姓名</th>\r\n                        <th>购票时间</th>\r\n                        <th>退票数量</th>\r\n                        <th>退款金额</th>\r\n                        <th>退款日期</th>\r\n                        <th>销售订单</th>\r\n                    </tr>}\r\n                </thead>\r\n                <tbody>\r\n                    {refundTicketListRef.current.map((obj, index) => (\r\n                        <tr key={index}>\r\n                            <td>{obj.conductorRefund.id}</td>\r\n                            <td>{obj.customerVarify.realName}</td>\r\n                            <td>{obj.conductorTicketRecord.createDateTime}</td>\r\n                            <td>{obj.conductorRefund.refundSize}</td>\r\n                            <td>{obj.conductorRefund.refundMoney}</td>\r\n                            <td>{obj.conductorRefund.refundDate}</td>\r\n                            <td>{obj.conductorTicketRecord.id}</td>\r\n                        </tr>\r\n                    ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\nexport default Refund\r\n\r\n","E:\\VSCode\\scenicticket-ui\\src\\component\\scenic\\index.tsx",["112","113","114","115","116","117","118"],"E:\\VSCode\\scenicticket-ui\\src\\component\\find\\index.tsx",["119","120","121","122"],"E:\\VSCode\\scenicticket-ui\\src\\component\\find\\list.tsx",["123"],{"ruleId":"124","severity":1,"message":"125","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":17},{"ruleId":"124","severity":1,"message":"128","line":3,"column":19,"nodeType":"126","messageId":"127","endLine":3,"endColumn":24},{"ruleId":"124","severity":1,"message":"129","line":8,"column":10,"nodeType":"126","messageId":"127","endLine":8,"endColumn":24},{"ruleId":"124","severity":1,"message":"130","line":22,"column":8,"nodeType":"126","messageId":"127","endLine":22,"endColumn":16},{"ruleId":"124","severity":1,"message":"131","line":23,"column":8,"nodeType":"126","messageId":"127","endLine":23,"endColumn":15},{"ruleId":"124","severity":1,"message":"132","line":247,"column":8,"nodeType":"126","messageId":"127","endLine":247,"endColumn":15},{"ruleId":"124","severity":1,"message":"133","line":272,"column":8,"nodeType":"126","messageId":"127","endLine":272,"endColumn":28},{"ruleId":"124","severity":1,"message":"134","line":285,"column":8,"nodeType":"126","messageId":"127","endLine":285,"endColumn":18},{"ruleId":"124","severity":1,"message":"135","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":23},{"ruleId":"124","severity":1,"message":"136","line":2,"column":25,"nodeType":"126","messageId":"127","endLine":2,"endColumn":29},{"ruleId":"124","severity":1,"message":"125","line":2,"column":31,"nodeType":"126","messageId":"127","endLine":2,"endColumn":38},{"ruleId":"124","severity":1,"message":"128","line":2,"column":50,"nodeType":"126","messageId":"127","endLine":2,"endColumn":55},{"ruleId":"124","severity":1,"message":"137","line":2,"column":57,"nodeType":"126","messageId":"127","endLine":2,"endColumn":63},{"ruleId":"124","severity":1,"message":"138","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":12},{"ruleId":"124","severity":1,"message":"125","line":3,"column":25,"nodeType":"126","messageId":"127","endLine":3,"endColumn":32},{"ruleId":"124","severity":1,"message":"139","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":28},{"ruleId":"124","severity":1,"message":"140","line":1,"column":42,"nodeType":"126","messageId":"127","endLine":1,"endColumn":51},{"ruleId":"124","severity":1,"message":"141","line":1,"column":53,"nodeType":"126","messageId":"127","endLine":1,"endColumn":61},{"ruleId":"124","severity":1,"message":"142","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":18},{"ruleId":"124","severity":1,"message":"143","line":2,"column":22,"nodeType":"126","messageId":"127","endLine":2,"endColumn":33},{"ruleId":"124","severity":1,"message":"135","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":23},{"ruleId":"124","severity":1,"message":"144","line":9,"column":18,"nodeType":"126","messageId":"127","endLine":9,"endColumn":36},{"ruleId":"124","severity":1,"message":"145","line":9,"column":38,"nodeType":"126","messageId":"127","endLine":9,"endColumn":44},{"ruleId":"124","severity":1,"message":"146","line":1,"column":40,"nodeType":"126","messageId":"127","endLine":1,"endColumn":46},{"ruleId":"124","severity":1,"message":"125","line":5,"column":10,"nodeType":"126","messageId":"127","endLine":5,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":71,"column":8,"nodeType":"149","endLine":71,"endColumn":10,"suggestions":"150"},{"ruleId":"124","severity":1,"message":"151","line":2,"column":17,"nodeType":"126","messageId":"127","endLine":2,"endColumn":36},{"ruleId":"124","severity":1,"message":"136","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":3,"column":16,"nodeType":"126","messageId":"127","endLine":3,"endColumn":23},{"ruleId":"124","severity":1,"message":"152","line":3,"column":25,"nodeType":"126","messageId":"127","endLine":3,"endColumn":33},{"ruleId":"124","severity":1,"message":"128","line":3,"column":35,"nodeType":"126","messageId":"127","endLine":3,"endColumn":40},{"ruleId":"124","severity":1,"message":"137","line":3,"column":42,"nodeType":"126","messageId":"127","endLine":3,"endColumn":48},{"ruleId":"124","severity":1,"message":"153","line":3,"column":50,"nodeType":"126","messageId":"127","endLine":3,"endColumn":60},{"ruleId":"124","severity":1,"message":"154","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":14},{"ruleId":"124","severity":1,"message":"145","line":4,"column":50,"nodeType":"126","messageId":"127","endLine":4,"endColumn":56},{"ruleId":"147","severity":1,"message":"155","line":130,"column":8,"nodeType":"149","endLine":130,"endColumn":10,"suggestions":"156"},{"ruleId":"124","severity":1,"message":"152","line":3,"column":34,"nodeType":"126","messageId":"127","endLine":3,"endColumn":42},{"ruleId":"124","severity":1,"message":"157","line":30,"column":11,"nodeType":"126","messageId":"127","endLine":30,"endColumn":22},{"ruleId":"124","severity":1,"message":"130","line":63,"column":11,"nodeType":"126","messageId":"127","endLine":63,"endColumn":19},{"ruleId":"147","severity":1,"message":"158","line":103,"column":8,"nodeType":"149","endLine":103,"endColumn":10,"suggestions":"159"},{"ruleId":"124","severity":1,"message":"160","line":205,"column":11,"nodeType":"126","messageId":"127","endLine":205,"endColumn":19},{"ruleId":"147","severity":1,"message":"161","line":278,"column":8,"nodeType":"149","endLine":278,"endColumn":10,"suggestions":"162"},{"ruleId":"147","severity":1,"message":"163","line":77,"column":8,"nodeType":"149","endLine":77,"endColumn":10,"suggestions":"164"},{"ruleId":"124","severity":1,"message":"165","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":30},{"ruleId":"124","severity":1,"message":"135","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":23},{"ruleId":"124","severity":1,"message":"166","line":4,"column":42,"nodeType":"126","messageId":"127","endLine":4,"endColumn":48},{"ruleId":"124","severity":1,"message":"152","line":4,"column":59,"nodeType":"126","messageId":"127","endLine":4,"endColumn":67},{"ruleId":"124","severity":1,"message":"153","line":4,"column":84,"nodeType":"126","messageId":"127","endLine":4,"endColumn":94},{"ruleId":"124","severity":1,"message":"167","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":14},{"ruleId":"124","severity":1,"message":"168","line":6,"column":18,"nodeType":"126","messageId":"127","endLine":6,"endColumn":28},{"ruleId":"124","severity":1,"message":"139","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":28},{"ruleId":"124","severity":1,"message":"140","line":1,"column":30,"nodeType":"126","messageId":"127","endLine":1,"endColumn":39},{"ruleId":"124","severity":1,"message":"169","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":14},{"ruleId":"124","severity":1,"message":"170","line":11,"column":15,"nodeType":"126","messageId":"127","endLine":11,"endColumn":22},{"ruleId":"124","severity":1,"message":"171","line":20,"column":20,"nodeType":"126","messageId":"127","endLine":20,"endColumn":27},"@typescript-eslint/no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'AssertionError' is defined but never used.","'BasePath' is assigned a value but never used.","'BaseUrl' is assigned a value but never used.","'sendReq' is assigned a value but never used.","'sendReqForTicketTest' is assigned a value but never used.","'testNumber' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'Home' is defined but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'CacheRoute' is defined but never used.","'CacheSwitch' is defined but never used.","'ScenicStyleContext' is defined but never used.","'UStyle' is defined but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'session'. Either include it or remove the dependency array.","ArrayExpression",["172"],"'InputHTMLAttributes' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'Scenic' is defined but never used.","React Hook useEffect has missing dependencies: 'scenic.id', 'setVisible', and 'updateView'. Either include them or remove the dependency array.",["173"],"'ResultProps' is defined but never used.","React Hook useEffect has missing dependencies: 'queryTicketByVarifyId' and 'updateVisibleCallback'. Either include them or remove the dependency array.",["174"],"'BASE_URL' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'searchCustomer' and 'view'. Either include them or remove the dependency array. You can also do a functional update 'updateView(v => ...)' if you only need 'view' in the 'updateView' call.",["175"],"React Hook useEffect has a missing dependency: 'view'. Either include it or remove the dependency array. You can also do a functional update 'changeView(v => ...)' if you only need 'view' in the 'changeView' call.",["176"],"'createContext' is defined but never used.","'Router' is defined but never used.","'Button' is defined but never used.","'ButtonType' is defined but never used.","'Simple' is defined but never used.","'setData' is assigned a value but never used.","'loading' is assigned a value but never used.",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [session]",{"range":"187","text":"188"},"Update the dependencies array to be: [scenic.id, setVisible, updateView]",{"range":"189","text":"190"},"Update the dependencies array to be: [queryTicketByVarifyId, updateVisibleCallback]",{"range":"191","text":"192"},"Update the dependencies array to be: [searchCustomer, view]",{"range":"193","text":"194"},"Update the dependencies array to be: [view]",{"range":"195","text":"196"},[2404,2406],"[session]",[4010,4012],"[scenic.id, setVisible, updateView]",[2959,2961],"[queryTicketByVarifyId, updateVisibleCallback]",[9227,9229],"[searchCustomer, view]",[2858,2860],"[view]"]